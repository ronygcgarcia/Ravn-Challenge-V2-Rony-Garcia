// *** DO NOT EDIT. GENERATED BY PRISMIX. ***
datasource db {
	provider = "postgresql"
	url = env("DATABASE_URL")
}
generator client {
	provider = "prisma-client-js"
}
model User {
	id Int @id @default(autoincrement())
	email String @unique
	password String 
	last_login String? 
	is_suspended Boolean 
	token_valid_after String? 
	verified Boolean 
	UserProfile UserProfile[] @relation(name: "UserToUserProfile")
	RefreshToken RefreshToken[] @relation(name: "RefreshTokenToUser")
	@@map("users")
}
model Role {
	id Int @id @default(autoincrement())
	name String 
	ProfileRole ProfileRole[] @relation(name: "ProfileRoleToRole")
	@@map("roles")
}
model Profile {
	id Int @id @default(autoincrement())
	nombre String 
	ProfileRole ProfileRole[] @relation(name: "ProfileToProfileRole")
	UserProfile UserProfile[] @relation(name: "ProfileToUserProfile")
	@@map("profiles")
}
model ProfileRole {
	profile Profile @relation(name: "ProfileToProfileRole", fields: [profile_id], references: [id])
	role Role @relation(name: "ProfileRoleToRole", fields: [role_id], references: [id])
	profile_id Int 
	role_id Int 
	@@map("profiles_roles")
	@@id([profile_id, role_id])
}
model UserProfile {
	profile Profile @relation(name: "ProfileToUserProfile", fields: [profile_id], references: [id])
	user User @relation(name: "UserToUserProfile", fields: [user_id], references: [id])
	profile_id Int 
	user_id Int 
	@@map("users_profiles")
	@@id([profile_id, user_id])
}
model RefreshToken {
	id Int @id @default(autoincrement())
	token String 
	user User @relation(name: "RefreshTokenToUser", fields: [user_id], references: [id])
	user_id Int 
	valid DateTime 
	@@map("refresh_token")
}